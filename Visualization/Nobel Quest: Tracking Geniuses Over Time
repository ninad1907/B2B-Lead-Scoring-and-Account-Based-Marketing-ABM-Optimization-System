1. Plot a Line Chart to Track the Yearly Evolution of Nobel Prizes Awarded
   Using the calculated prizes_per_year series, create a line chart to visualize how the number of Nobel Prizes awarded has evolved over time, using the following parameters:
   figure size : 10 by 6 Color : blue linestyle : - Marker : o Title : Evolution of Nobel Prizes Awarded Per Year
   xlabel : Year ylabel : Number of Nobel Prizes Awarded
   Don't forget to add a grid to your plot for better readability before you display it.
A: fig, ax = plt.subplots(figsize=(10, 6))
   # Plotting
   ax.plot(prizes_per_year.index, prizes_per_year.values, marker='o', linestyle='-', color='blue')
   # Add labels and title
   ax.set_xlabel('Year')
   ax.set_ylabel('Number of Nobel Prizes Awarded')
   ax.set_title('Evolution of Nobel Prizes Awarded Per Year')
   # Add grid
   ax.grid(True)
2. Plot a timeline showing the evolution of Nobel Prize awards over time, classified by category
A: fig, ax = plt.subplots(figsize=(10, 6))
   # Plotting each category with a different line
   for category in prizes_per_category.columns:
   ax.plot(prizes_per_category.index, prizes_per_category[category], linestyle='-', label=category)
   # Add labels and title
   ax.set_xlabel('Year')
   ax.set_ylabel('Number of Nobel Prizes Awarded')
   ax.set_title('Evolution of Nobel Prizes Awarded by Category')
   # Add a legend to distinguish between categories
   ax.legend(title="Category")
   # Add grid
   ax.grid(True)
3. Create a stacked bar chart to visualize the distribution of male vs. female Nobel laureates across different decades.
A: fig, ax = plt.subplots(figsize=(10, 6))
   # Create bar chart
   bar_width = 1.5
   ax.bar(decades, male_counts, bar_width, label='Male', color='blue')
   ax.bar(decades, female_counts, bar_width, bottom=male_counts, label='Female', color='pink')
   # Add labels and title
   ax.set_xlabel('Decade')
   ax.set_ylabel('Number of Nobel Laureates')
   ax.set_title('Distribution of Male vs. Female Nobel Laureates by Decade')
   # Add legend to distinguish between genders
   ax.legend(title="Gender")
4. Plot the number of Nobel laureates born in New York over time
A: # Create figure and axis using fig and ax method
   fig, ax = plt.subplots(figsize=(10, 6))
   # Plot the data
   ax.plot(ny_laureates_per_year.index, ny_laureates_per_year.values, marker='o', linestyle='-', color='green')
   # Add labels and title
   ax.set_xlabel('Year')
   ax.set_ylabel('Number of Nobel Laureates Born in New York')
   ax.set_title('Number of Nobel Laureates Born in New York Over Time')
5. Use a Multi-line Plot to Show Nobel Prizes Won by Countries over the Decades.
A: # Create figure and axis using fig and ax method
   fig, ax = plt.subplots(figsize=(10, 6))
   # Plotting multiple lines for each country
   for country in laureates_by_decade_country.columns:
    ax.plot(laureates_by_decade_country.index, laureates_by_decade_country[country], label=country, marker='o')
   # Add labels and title
   ax.set_xlabel('Decade')
   ax.set_ylabel('Number of Nobel Prizes Won')
   ax.set_title('Nobel Prizes Won by Country Over the Decades')
   # Add legend to distinguish between countries
   ax.legend(title="Country", loc="center left", bbox_to_anchor=(1, 0.5))
   # Add grid
   ax.grid(True)
   # Adjust layout
   plt.tight_layout(rect=[0, 0, 0.85, 1])
6. Create a line chart showing the number of laureates affiliated with Harvard over the years.
A: # Create figure and axis using fig and ax method
   fig, ax = plt.subplots(figsize=(10, 6))
   # Plot the number of Harvard-affiliated laureates over time
   ax.plot(harvard_laureates_per_year.index, harvard_laureates_per_year.values, marker='o', linestyle='-', color='green')
   # Add labels and title
   ax.set_xlabel('Year')
   ax.set_ylabel('Number of Laureates')
   ax.set_title('Nobel Laureates Affiliated with Harvard Over the Years')
7. Create a Line Chart to Showcase the Average Age of Laureates Winning the Nobel Prize, by Year
A: # Create figure and axis using fig and ax method
   fig, ax = plt.subplots(figsize=(10, 6))
   # Plot the average age of laureates over time
   ax.plot(avg_age_by_year.index, avg_age_by_year.values, marker='o', linestyle='-', color='blue')
   # Add labels and title
   ax.set_xlabel('Year')
   ax.set_ylabel('Average Age at Winning')
   ax.set_title('Average Age of Nobel Laureates at Time of Winning (by Year)')
   # Add grid
   ax.grid(True)
8. Generate a Plot for the Percentage of Shared Nobel Prizes Over Time.
A: # Create figure and axis using fig and ax method
   fig, ax = plt.subplots(figsize=(10, 6))
   # Plot the percentage of shared prizes over time
   ax.plot(percentage_shared_prizes.index, percentage_shared_prizes.values, marker='o', linestyle='-', color='purple')
   # Add labels and title
   ax.set_xlabel('Year')
   ax.set_ylabel('Percentage of Shared Prizes')
   ax.set_title('Percentage of Nobel Prizes Shared by Multiple Winners Over Time')
   # Add grid
   ax.grid(True)
9. Use a line chart to visualize how the length of Nobel Prize motivations (number of words in motivation column) has evolved over time.
A: # Create figure and axis using fig and ax method
   fig, ax = plt.subplots(figsize=(10, 6))
   # Plot the average word count of motivations over time
   ax.plot(avg_word_count_by_year.index, avg_word_count_by_year.values, marker='v', linestyle='-', color='orange')
   # Add labels and title
   ax.set_xlabel('Year')
   ax.set_ylabel('Average Word Count of Motivation')
   ax.set_title('Evolution of Nobel Prize Motivation Length Over Time')
   # Add grid
   ax.grid(True)
10. Create a Bar Chart of Cities Producing the Most Nobel Laureates
A:  # Create figure and axis using fig and ax method
    fig, ax = plt.subplots(figsize=(10, 6))
    # Plot bar chart
    ax.bar(city_counts.index, city_counts.values, color='skyblue')
    # Add labels and title
    ax.set_xlabel('City')
    ax.set_ylabel('Number of Nobel Laureates')
    ax.set_title('Top Cities Producing the Most Nobel Laureates')
    # Rotate x-axis labels for readability
    plt.xticks(rotation=45)
    # Show plot
    plt.tight_layout()
11. Compare Lifespans of Nobel Laureates
A: # Create figure and axis using fig and ax method
   fig, ax = plt.subplots(figsize=(10, 6))
   # Plot histogram of lifespans
   ax.hist(df['lifespan'], bins=10, color='skyblue', edgecolor='black')
   # Add labels and title
   ax.set_xlabel('Lifespan (Years)')
   ax.set_ylabel('Number of Nobel Laureates')
   ax.set_title('Distribution of Nobel Laureates\' Lifespans')
   # Show plot
   plt.tight_layout()
12. Analyze the Evolution of Female Representation in Nobel Prizes
A:  # Create figure and axis using fig and ax method
    fig, ax = plt.subplots(figsize=(10, 6))
    # Plot the line chart showing the trend of female laureates
    ax.plot(female_trend.index, female_trend.values, marker='o', color='purple')
    # Add labels and title
    ax.set_xlabel('Year')
    ax.set_ylabel('Number of Female Laureates')
    ax.set_title('Trend of Female Nobel Laureates Over Time')
    # Display the chart
    plt.tight_layout()
