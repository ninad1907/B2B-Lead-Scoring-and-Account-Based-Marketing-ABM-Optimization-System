1. Students who did not take the exam

Create a new list called no_exam with the id and name of students who did not take the exam. The list should only contain the id and name information and should look like this:

[
    (1, 'Amit'),
    (2, 'Ankit'),
    (3, 'Aman'),
    ...
]

=> no_exam = []
for (student_id, student_name, student_attendence) in zip(student_ids, names, attendences):
    if student_attendence == 'Absent':
        no_exam.append((student_id, student_name))


2. Total number of student present in the exam

Find the total number of students who took the exam and enter the correct answer in the input box below.

=> total_present = 0
for student_attendence in attendences:
    if student_attendence == 'Present':
        total_present += 1


3. 
Calculate the average score of students

Calculate the average score of 'Male' and 'Female' students who took the exam and store them in variables named avg_score_male and avg_score_female respectively.

=> avg_score_male = 0
avg_score_female = 0

total_male = 0
total_male_marks = 0
total_female = 0
total_female_marks = 0

for (student_attendence, student_gender, student_score) in zip(attendences, genders, scores):
    if student_attendence == 'Present':
        if student_gender == 'Male':
            total_male += 1
            total_male_marks += student_score
        else:
            total_female += 1
            total_female_marks += student_score

avg_score_male = total_male_marks/total_male 
avg_score_female = total_female_marks/total_female


4. 
Calculate the median score of the class

Calculate median score of students who took exam and store it in variable median_score.

=> marks = []
for (student_attendence, student_score) in zip(attendences, scores):
    if student_attendence == 'Present':
        marks.append(student_score)

marks.sort()
if len(marks) % 2 == 0:
    median_score = (marks[len(marks)//2] + marks[len(marks)//2 - 1])/2
else:
    median_score = marks[len(marks)//2]


5. Student who attended the class

Create two lists - attended and not_attended. The attended list should contain lists of the student_id, name, and score of students who attended the class. The not_attended list should contain the same details of students who did not attend the class. The list should something like this:

[[1, 'John', 50], [2, 'Jane', 60], [3, 'Joe', 70], [4, 'Jill', 80], [5, 'Jack', 90]]
[[6, 'Jenny', 100], [7, 'Jasmine', 110], [8, 'Jenna', 120]]

=> attended = []
not_attended = []

for (student_id, student_name, student_attendence, student_score) in zip(student_ids, names, attendences, scores):
    if student_attendence == 'Present':
        attended.append([student_id, student_name, student_score])
    else:
        not_attended.append([student_id, student_name, student_score])


6. 
Find the students who failed the exam

Create a failed list containing names and scores of students who scored less than 40, excluding those who did not attend the exam. The expected output should be in the format below:

[['John', 30], ['Jane', 20], ['Joe', 34], ['Jill', 13], ['Jack', 25]]

=> failed = []
for (student_name, student_attendence, student_score) in zip(names, attendences, scores):
    if student_attendence == 'Present' and student_score < 40:
        failed.append([student_name, student_score])


7. 
Find the total male and female students

Calculate the total number of male and female students in the class and enter the values in the input box below (format: male, female; separated by comma).

Like this: 30, 50

=> male_count = 0
female_count = 0
for student_gender in genders:
    if student_gender == 'Male':
        male_count += 1
    else:
        female_count += 1


8. Male Student who attended the exam

Create a list called male_student_exam with the names and scores of male students who took the exam. The output should be a list in the format:

[['John', 50], ['Jane', 60], ['Joe', 70], ['Jill', 80], ['Jack', 90]]

=>  male_student_exam = []
for (student_name, student_gender, student_attendence, student_score) in zip(names, genders, attendences, scores):
    if student_gender == 'Male' and student_attendence == 'Present':
        male_student_exam.append([student_name, student_score])


9. Percentage of male student who passed the exam

Calculate the percentage(%) of male students who passed the exam with a score of 40 or higher, and store the result in the variable male_pass_percentage. Only consider male students who attended the exam.

=> male_pass_percentage = 0
male_pass_count = 0
total_male_student_exam = 0
for (student_gender, student_attendence, student_score) in zip(genders, attendences, scores):
    if student_gender == 'Male' and student_attendence == 'Present':
        total_male_student_exam += 1
        if student_score >= 40:
            male_pass_count += 1

male_pass_percentage = (male_pass_count/total_male_student_exam)*100


10. Percentage of female students who passed the exam

Find the percentage of female students who passed the exam with a score of 40 or higher. Store the result in a variable called female_pass_percentage. Consider only the students who attended the exam.

=> female_pass_percentage = 0
female_pass_count = 0
total_female_student_exam = 0
for (student_gender, student_attendence, student_score) in zip(genders, attendences, scores):
    if student_gender == 'Female' and student_attendence == 'Present':
        total_female_student_exam += 1
        if student_score >= 40:
            female_pass_count += 1

female_pass_percentage = (female_pass_count/total_female_student_exam)*100


11. Find topper performers

Create a list named topper_performers containing the student_id, name, and score of students who scored 90 or above and attended the exam. Your topper_performers list should look like this but not necessarily the same like this:

topper_performers = [('1', 'Jennifer Olson', 90), ('2', 'Brandy Robles', 90), ('3', 'Wayne Johnson', 90), ('4', 'Crystal Smith', 90), ('5', 'Misty Wells', 90), ('6', 'Michael Harris MD', 90), ('7', 'Elizabeth Burns', 90), ('8', 'Heather Parker', 90)]

=> topper_performers = []
for (student_id, student_name, student_attendence, student_score) in zip(student_ids, names, attendences, scores):
    if student_attendence == 'Present' and student_score >= 90:
        topper_performers.append((student_id, student_name, student_score))


12. Find the male and female topper performers

In this activity, you have to find out count of male and female topper performers. Topper performers Count the number of male and female topper performers (students who scored 90 or above) who attended the exam and enter the count in the input box below. Format: male count, female count (separated by comma).

Like this: 30, 50

=> male_toppers = 0
female_toppers = 0
for (student_attendence, student_gender, student_score) in zip(attendences, genders, scores):
    if student_attendence == 'Present' and student_score >= 90:
        if student_gender == 'Male':
            male_toppers += 1
        else:
            female_toppers += 1
